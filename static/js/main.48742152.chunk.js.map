{"version":3,"sources":["img/humidity.png","img/wind.png","img/weather.png","App.js","reducer.js","otherReducer.js","index.js"],"names":["connect","state","cname","newcity","city","temperature","otherparam","country","day","time","description","humidity","wind","dispatch","changeCity","name","type","payload","changeParams","params","props","useState","ccity","setCcity","tcity","setTcity","useEffect","a","url","fetch","res","json","data","main","d","Date","toLocaleString","timeZone","timezone","ttime","hour","minute","hour12","tday","getDay","temp","weather","sys","speed","console","log","fetchApi","className","placeholder","id","onChange","e","target","value","style","color","parseInt","fontSize","src","alt","marginTop","marginLeft","textAlign","search","reducer","action","iState","otherReducer","masterReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48742152.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/humidity.99aac8e9.png\";","export default __webpack_public_path__ + \"static/media/wind.38db30e3.png\";","export default __webpack_public_path__ + \"static/media/weather.aaff0874.png\";","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\";\nimport './App.css';\nimport humidity from \"./img/humidity.png\"\nimport wind from \"./img/wind.png\"\nimport weather from \"./img/weather.png\"\n\nfunction App(props) {\n  const[ccity,setCcity]=useState();\n  const [tcity, setTcity] = useState();\n  useEffect(() => {\n    const fetchApi = async () => {\n      const url = `http://api.openweathermap.org/data/2.5/weather?q=${props.cname}&units=metric&appid=28a9de704dac4be633433fee29c5c4ed`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setTcity(data.main)\n      let d = new Date(new Date().toLocaleString({ timeZone: data.timezone }));\n      let ttime = d.toLocaleString(data.timeZone, { hour: 'numeric', minute: 'numeric', hour12: true })\n      let days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\n      let tday = days[d.getDay()];\n      setCcity(data.name);\n      (data.main ? props.changeParams({\n        temperature: data.main.temp,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        country: data.sys.country,\n        wind: data.wind.speed,\n        day: tday,\n        time: ttime\n\n      }) : console.log(\"no data found\"))\n\n\n    }\n    fetchApi();\n\n  }, [props])\n\n\n  return (\n    <>\n      <div className=\"card\">\n        <input type=\"text\" placeholder=\"Enter City\" id=\"text\" onChange={(e) => { props.changeCity(e.target.value) }} />\n        {(!tcity ? (<p style={{textAlign:\"center\"}}>No Data Found</p>) : (<>\n          <div className=\"cen\">\n            <h2 style={{color:\"white\"}}>{ccity},{props.country}</h2>\n            <p style={{color:\"white\"}}>{props.day}, {props.time}, <strong>{props.description}</strong></p>\n            <div className=\"p\">\n              <p style={{color:\"white\"}} className=\"big\">{parseInt(props.temperature)}<sup style={{ fontSize: \"50%\",color:\"white\" }}>Â°C</sup></p>\n              <img src={weather} alt=\"wt\"></img>\n            </div>\n            <div className=\"o\">\n              <span><img className=\"img1\" src={humidity} alt=\"humi\"></img><p style={{marginTop:\"8%\",color:\"white\"}}>{props.humidity}% Humidity</p></span>\n              <span style={{marginLeft:\"50%\"}}><img className=\"img2\" src={wind} alt=\"win\"></img><p style={{marginLeft:\"-15%\",marginTop:\"8%\",color:\"white\"}}>{props.wind} Km/h Wind </p></span>\n\n            </div>\n          </div>\n\n        </>))}\n\n      </div>\n    </>\n  );\n\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cname: state.newcity.city,\n    temperature: state.otherparam.temperature,\n    country: state.otherparam.country,\n    day: state.otherparam.day,\n    time: state.otherparam.time,\n    description: state.otherparam.description,\n    humidity:state.otherparam.humidity,\n    wind:state.otherparam.wind\n\n  }\n\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeCity: (name) => {\n      dispatch({ type: \"CHANGE_NAME\", payload: name });\n\n    },\n    changeParams: (params) => {\n\n      dispatch({\n        type: \"CHANGE_PARAMS\", payload: {\n          country: params.country,\n          time: params.time,\n          day: params.day,\n          temperature: params.temperature,\n          description: params.description,\n          wind: params.wind,\n          humidity: params.humidity\n        }\n      });\n\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const search={\r\n    city:\"karachi\"\r\n\r\n}\r\n\r\nconst reducer = (state = search, action) => {\r\n    \r\n    switch (action.type) {\r\n        case \"CHANGE_NAME\":\r\n            return {city:action.payload}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","const iState = {\r\n    country:\"\",\r\n    time:\"\",\r\n    day:\"\",\r\n    temperature:\"\",\r\n    description:\"\",\r\n    wind:\"\",\r\n    humidity:\"\"\r\n    \r\n}\r\n const otherReducer=(state=iState,action)=>{\r\n    \r\n    switch (action.type) {\r\n        case \"CHANGE_PARAMS\":\r\n            \r\n            return{...state,\r\n            country:action.payload.country,\r\n            time:action.payload.time,\r\n            day:action.payload.day,\r\n            temperature:action.payload.temperature,\r\n            description:action.payload.description,\r\n            wind:action.payload.wind,\r\n            humidity:action.payload.humidity\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport default otherReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore,applyMiddleware,combineReducers} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport reducer from \"./reducer\"\nimport otherReducer from \"./otherReducer\"\nimport thunk from \"redux-thunk\";\n\nconst masterReducer=combineReducers({\n  newcity:reducer,\n  otherparam:otherReducer\n});\nconst store=createStore(masterReducer,applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}